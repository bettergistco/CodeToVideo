#!/bin/bash
# CodeToVideo/run_deps

# @see https://stackoverflow.com/a/677212/430062
MISSING_DEPS=0
hash ffmpeg 2> /dev/null || { MISSING_DEPS=1; echo >&2 "ERROR: ffmpeg is required and was not found in \$PATH."; }
hash nl 2> /dev/null || { MISSING_DEPS=1; echo >&2 "ERROR: GNU nl is required and was not found in \$PATH."; }
hash split 2> /dev/null || { MISSING_DEPS=1; echo >&2 "ERROR: GNU split is required and was not found in \$PATH."; }
hash tail 2> /dev/null || { MISSING_DEPS=1; echo >&2 "ERROR: GNU tail is required and was not found in \$PATH."; }

! hash chroma 2> /dev/null || CHROMA=$(realpath "./bin/chroma")
[[ -f "${CHROMA}" ]] || {
    MISSING_DEPS=1;
    echo >&2 "ERROR: alecthomas/chroma is required and was not found in \$PATH."
    echo >&2 "       See https://github.com/alecthomas/chroma"
}
unset CHROMA

if [ "$MISSING_DEPS" -ne 0 ]; then
    exit 127
fi
unset MISSING_DEPS
# END CodeToVideo/run_deps
#!/bin/bash
## CodeToVideo/bin/better-split
## Part of HopeSeekr's BashScripts Project
##   https://github.com/hopeseekr/BashScripts
## Copyright © 2020 Theodore R. Smith <theodore@phpexperts.pro>
## License: Creative Commons Attributions International License v4.0

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# @see https://stackoverflow.com/a/677212/430062
hash split 2> /dev/null || { echo >&2 "ERROR: GNU split is required and was not found in \$PATH."; exit 127; }

function betterSplit() {
    if [ -z "$1" ]; then
        split "$@"
        return
    fi
    split --numeric-suffixes=1 "$@" "${!#}-"
}

# Only run this if it's by itself.
# @see https://stackoverflow.com/a/2684300/430062
if [[ "${BASH_SOURCE[0]}" == "${0}" && ${BASH_SOURCE[0]##*/} != "code-to-video" ]]; then
    betterSplit $@
fi

## END CodeToVideo/bin/better-split ###
#!/bin/bash
## CodeToVideo/bin/c2v-highlight-code ###
## Part of CodeToVideo, a Bettergist Collective project
##   https://github.com/bettergistCo/CodeToVideo
## Copyright © 2020 Theodore R. Smith <theodore@phpexperts.pro>
## License: Creative Commons Attributions International License v4.0

# @see https://stackoverflow.com/a/677212/430062
CHROMA="chroma"
! hash chroma 2> /dev/null || CHROMA=$(realpath "./bin/chroma")
[[ -f "${CHROMA}" ]] || {
    echo >&2 "ERROR: alecthomas/chroma is required and was not found in \$PATH."
    echo >&2 "       See https://github.com/alecthomas/chroma"
    exit 127
}

function highlightCode() {
    FILE=1
    TARGET=$(realpath "$1")

    if [ ! -d "$TARGET" ]; then
        echo "ERROR: $TARGET does not exist or is not a directory."
        exit 1
    fi

    BASE_DIR=${TARGET##*/}

    mkdir -p /tmp/CodeToVideo

    cd /tmp/CodeToVideo
    find "$TARGET" -type f | grep -vP '\.(jpg|jpeg|png|gif|ico|webm|mp4|mpg|avi|mp3|aac|flac|ogg|bmp|xcf|png)$' | grep -vP '(.git|composer.lock|node_modules|vendor)' | while read each; do
        echo $each
        echo "${BASE_DIR}/${each##*$BASE_DIR/}" >highlighted.${BASE_DIR}.$FILE
        ${CHROMA} "$each" >>highlighted.${BASE_DIR}.$FILE
        ((FILE = FILE + 1))
    done
}

highlightCode "$@"
## END CodeToVideo/bin/c2v-highlight-code ###

#!/bin/bash
## CodeToVideo/bin/c2v-text-to-images ###
## Part of CodeToVideo, a Bettergist Collective project
##   https://github.com/bettergistCo/CodeToVideo
## Copyright © 2020 Theodore R. Smith <theodore@phpexperts.pro>
## License: Creative Commons Attributions International License v4.0

# @see https://stackoverflow.com/a/677212/430062
hash tail 2> /dev/null || { echo >&2 "ERROR: GNU tail is required and was not found in \$PATH."; exit 127; }
hash nl 2> /dev/null || { echo >&2 "ERROR: GNU nl is required and was not found in \$PATH."; exit 127; }
hash scrot 2> /dev/null || { echo >&2 "ERROR: scrot is required and was not found in \$PATH."; exit 127; }

# @see https://stackoverflow.com/a/11307382/430062
function countFiles() {
    shopt -s nullglob
    logfiles=($1)
    echo ${#logfiles[@]}
}

function textToImage() {
    # @see https://unix.stackexchange.com/a/184016/15780
    TERM_LINES=$(tput lines)

    # @see https://github.com/hopeseekr/BashScripts [american-date]

    cd /tmp/CodeToVideo
    rm highlighted.*.*-* -vf
    for file in highlighted.*; do
        FILENAME=$(head -n1 $file)
        PROJECT_DIR=pngs/${FILENAME%%/*}
        PROJECT_FILE=${FILENAME#*/}
        OUTPUT_BASE_FILENAME="${PROJECT_FILE//\//_}"

        echo $PROJECT_DIR $PROJECT_FILE $OUTPUT_BASE_FILENAME
        OUTPUT_BASE_FILENAME="${PROJECT_DIR}/${OUTPUT_BASE_FILENAME}"
        echo ${OUTPUT_BASE_FILENAME}

        mkdir -p "${PROJECT_DIR}"

        if [ -f "../bin/better-split" ]; then
            ../bin/better-split --lines=$((TERM_LINES - 2)) $file
        else
            betterSplit --lines=$((TERM_LINES - 2)) $file
        fi

        PARTS_COUNT=$(countFiles "$file-*")
        echo $PARTS_COUNT

        PARTNUM=1
        for part in $file-*; do
            POSTFIX=${part##*-}

            clear

            DATETIME=$(date +"%a, %e %B %Y %H:%M:%S %Z [%s]")
            echo "$FILENAME (${PARTNUM} of ${PARTS_COUNT}) — Archived @ ${DATETIME}"

            # Strip out the extraneous filename.
            if [ $PARTNUM -eq 1 ]; then
                # @see https://stackoverflow.com/a/604871/430062
                tail +2 $part | nl -b a
            else
                nl -b a --starting-line-number=$(((TERM_LINES - 2) * ($PARTNUM - 1))) $part
            fi

            OUTPUT_FILENAME="${OUTPUT_BASE_FILENAME}-${POSTFIX}.png"

            # IMPORTANT!!! Without even this microsleep, bash seems to go async and uses the previous screenshot in the current filename.
            sleep 0.05

            # @see https://askubuntu.com/a/715335/367284
            scrot --overwrite -u $OUTPUT_FILENAME
            rm ${part}

            ((PARTNUM = PARTNUM + 1))
        done

        rm ${file}
    done
}

# Only run this if it's by itself.
# @see https://stackoverflow.com/a/2684300/430062
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    textToImage "$@"
fi

## END CodeToVideo/bin/c2v-text-to-images ###
#!/bin/bash
## CodeToVideo/bin/c2v-images-to-video ###
## Part of CodeToVideo, a Bettergist Collective project
##   https://github.com/bettergistCo/CodeToVideo
## Copyright © 2020 Theodore R. Smith <theodore@phpexperts.pro>
## License: Creative Commons Attributions International License v4.0

# @see https://stackoverflow.com/a/677212/430062
hash ffmpeg 2> /dev/null || { echo >&2 "ERROR: ffmpeg is required and was not found in \$PATH."; exit 127; }

function imagesToVideo() {
    if [ -z "$1" ]; then
        echo "ERROR: You must specify a project directory."
        exit 1
    fi

    PROJECT_DIR="/tmp/CodeToVideo/pngs/$1"

    if [ ! -d "$PROJECT_DIR" ]; then
        echo "ERROR: Cannot find the '$PROJECT_DIR' project directory."
        exit 2
    fi

    # @see https://stackoverflow.com/a/34195247/430062
    if ! compgen -G "${PROJECT_DIR}/*.png" >/dev/null; then
        echo "ERROR: There are no PNGs in '$PROJECT_DIR'."
        exit 3
    fi

    SECONDS_PER_IMAGE=1
    if [ ! -z "$2" ]; then
        SECONDS_PER_IMAGE=$2
    fi

    if [ "$SECONDS_PER_IMAGE" == "0" ]; then
        SECONDS_PER_IMAGE="0.04" # 1/25
    fi

    if [ ! -z "$3" ]; then
        AUDIO_FILE=$(realpath "$3")
    fi

    cd /tmp/codeToVideo
    mkdir -p "${HOME}/Videos/CodeToVideo"
    VIDEO_FILE="${HOME}/Videos/CodeToVideo/$1.mp4"

    if [ -z "$AUDIO_FILE" ]; then
        ffmpeg -y -framerate 1/${SECONDS_PER_IMAGE} -pattern_type glob -i "${PROJECT_DIR}/*.png" -r 25 -i /usr/share/codetovideo/watermark.png -s:v 1920x1080 \
            -c:v h264 -crf 16 -tune animation -preset slower -pix_fmt yuv420p -filter_complex "overlay=x=(main_w-overlay_w):y=(main_h-overlay_h)" \
            "${VIDEO_FILE}"
    else
        ffmpeg -y -framerate 1/${SECONDS_PER_IMAGE} -pattern_type glob -i "${PROJECT_DIR}/*.png" -r 25 -i /usr/share/codetovideo/watermark.png \
            -i "$AUDIO_FILE" -codec:a aac -shortest \
            -s:v 1920x1080 \
            -c:v h264 -crf 16 -tune animation -preset slower -pix_fmt yuv420p -filter_complex "overlay=x=(main_w-overlay_w):y=(main_h-overlay_h)" \
            "${VIDEO_FILE}"
    fi

    if [ ! -f "$VIDEO_FILE" ]; then
        echo "ERROR: Did not successfully create the video '${VIDEO_FILE}'."
        exit 4
    fi

    echo ""
    echo "Video has been saved to '${VIDEO_FILE}'"

    #rm -rf "$PROJECT_DIR"
}

# Only run this if it's by itself.
# @see https://stackoverflow.com/a/2684300/430062
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if [[ ${BASH_SOURCE[0]##*/} == "code-to-video" ]]; then
        cd "$ROOT_DIR"
        BASE_DIR=${1##*/}

        # Swaps $1 with $BASE_DIR.
        # @see https://stackoverflow.com/a/4827707/430062
        set -- "$BASE_DIR" "${@:2}"
    fi

    imagesToVideo "$@"
fi
## END CodeToVideo/bin/c2v-images-to-video ###
